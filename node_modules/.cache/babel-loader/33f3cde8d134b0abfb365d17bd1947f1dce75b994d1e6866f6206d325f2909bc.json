{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIT_NB_007\\\\Desktop\\\\Template-Nook\\\\React-Landing-Page-Template\\\\src\\\\components\\\\Test.jsx\",\n  _s = $RefreshSig$();\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { loadFull } from \"tsparticles\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App2() {\n  _s();\n  const containerRef = useRef(null),\n    [init, setInit] = useState(false);\n  useEffect(() => {\n    if (init) {\n      return;\n    }\n    initParticlesEngine(async engine => {\n      await loadFull(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, [init]);\n  const particlesLoaded = useCallback(container => {\n      containerRef.current = container;\n      window.particlesContainer = container;\n    }, [containerRef]),\n    options = useMemo(() => ({\n      fullScreen: {\n        zIndex: -1\n      },\n      particles: {\n        number: {\n          value: 100\n        },\n        links: {\n          enable: true\n        },\n        move: {\n          enable: true\n        }\n      },\n      themes: [{\n        name: \"light\",\n        default: {\n          value: true,\n          auto: true,\n          mode: \"light\"\n        },\n        options: {\n          background: {\n            color: \"#ffffff\"\n          },\n          particles: {\n            color: {\n              value: \"#000000\"\n            },\n            links: {\n              color: \"#000000\"\n            }\n          }\n        }\n      }, {\n        name: \"dark\",\n        default: {\n          value: true,\n          auto: true,\n          mode: \"dark\"\n        },\n        options: {\n          background: {\n            color: \"#000000\"\n          },\n          particles: {\n            color: {\n              value: \"#ffffff\"\n            },\n            links: {\n              color: \"#ffffff\"\n            }\n          }\n        }\n      }]\n    }), []),\n    lightTheme = () => {\n      var _containerRef$current;\n      (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.loadTheme(\"light\");\n    },\n    darkTheme = () => {\n      var _containerRef$current2;\n      (_containerRef$current2 = containerRef.current) === null || _containerRef$current2 === void 0 ? void 0 : _containerRef$current2.loadTheme(\"dark\");\n    };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 26\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-btn\",\n        onClick: lightTheme,\n        children: \"Light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-btn\",\n        onClick: darkTheme,\n        children: \"Dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), init && /*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      particlesLoaded: particlesLoaded,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(App2, \"bId82i29gDc+AMii7fu2ImtKAh4=\");\n_c = App2;\nexport default App2;\nvar _c;\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["Particles","initParticlesEngine","loadFull","useCallback","useEffect","useMemo","useRef","useState","App2","containerRef","init","setInit","engine","then","particlesLoaded","container","current","window","particlesContainer","options","fullScreen","zIndex","particles","number","value","links","enable","move","themes","name","default","auto","mode","background","color","lightTheme","loadTheme","darkTheme"],"sources":["C:/Users/SIT_NB_007/Desktop/Template-Nook/React-Landing-Page-Template/src/components/Test.jsx"],"sourcesContent":["import Particles, { initParticlesEngine } from \"@tsparticles/react\";\r\nimport { loadFull } from \"tsparticles\";\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\nfunction App2() {\r\n    const containerRef = useRef(null), [ init, setInit ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (init) {\r\n            return;\r\n        }\r\n\r\n        initParticlesEngine(async (engine) => {\r\n            await loadFull(engine);\r\n        }).then(() => {\r\n            setInit(true);\r\n        });\r\n    }, [ init ]);\r\n\r\n    const particlesLoaded = useCallback(\r\n            (container) => {\r\n                containerRef.current = container;\r\n\r\n                window.particlesContainer = container;\r\n            },\r\n            [ containerRef ]\r\n        ),\r\n        options = useMemo(\r\n            () => ({\r\n                fullScreen: {\r\n                    zIndex: -1,\r\n                },\r\n                particles: {\r\n                    number: {\r\n                        value: 100,\r\n                    },\r\n                    links: {\r\n                        enable: true,\r\n                    },\r\n                    move: {\r\n                        enable: true,\r\n                    },\r\n                },\r\n                themes: [\r\n                    {\r\n                        name: \"light\",\r\n                        default: {\r\n                            value: true,\r\n                            auto: true,\r\n                            mode: \"light\",\r\n                        },\r\n                        options: {\r\n                            background: {\r\n                                color: \"#ffffff\",\r\n                            },\r\n                            particles: {\r\n                                color: {\r\n                                    value: \"#000000\",\r\n                                },\r\n                                links: {\r\n                                    color: \"#000000\",\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                    {\r\n                        name: \"dark\",\r\n                        default: {\r\n                            value: true,\r\n                            auto: true,\r\n                            mode: \"dark\",\r\n                        },\r\n                        options: {\r\n                            background: {\r\n                                color: \"#000000\",\r\n                            },\r\n                            particles: {\r\n                                color: {\r\n                                    value: \"#ffffff\",\r\n                                },\r\n                                links: {\r\n                                    color: \"#ffffff\",\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                ],\r\n            }),\r\n            []\r\n        ),\r\n        lightTheme = () => {\r\n            containerRef.current?.loadTheme(\"light\");\r\n        },\r\n        darkTheme = () => {\r\n            containerRef.current?.loadTheme(\"dark\");\r\n        };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                {/* <img src={logo} className=\"App-logo\" alt=\"logo\"/> */}\r\n                <p>\r\n                    Edit <code>src/App.js</code> and save to reload.\r\n                </p>\r\n                <a\r\n                    className=\"App-link\"\r\n                    href=\"https://reactjs.org\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Learn React\r\n                </a>\r\n                <button className=\"theme-btn\" onClick={lightTheme}>\r\n                    Light\r\n                </button>\r\n                <button className=\"theme-btn\" onClick={darkTheme}>\r\n                    Dark\r\n                </button>\r\n            </header>\r\n            {init && (\r\n                <Particles\r\n                    id=\"tsparticles\"\r\n                    particlesLoaded={particlesLoaded}\r\n                    options={options}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App2;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}