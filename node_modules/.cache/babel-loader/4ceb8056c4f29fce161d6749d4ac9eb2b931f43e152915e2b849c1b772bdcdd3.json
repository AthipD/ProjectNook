{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIT_NB_007\\\\Desktop\\\\Template-Nook\\\\React-Landing-Page-Template\\\\src\\\\index.js\";\nimport React from 'react';\n// import ReactDOM from 'react-dom/client'; // ใช้ react-dom/client\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'; // นำเข้า Routes และ Route\n// import servicesDetail from './components/servicesDetail.jsx';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'; // รวม Popper.js\n\n// ใช้ createRoot แทน ReactDOM.render\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root')); // สร้าง root ใหม่\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this));\nserviceWorker.unregister();","map":{"version":3,"names":["React","App","serviceWorker","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","root","ReactDOM","createRoot","document","getElementById","render","StrictMode","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","unregister"],"sources":["C:/Users/SIT_NB_007/Desktop/Template-Nook/React-Landing-Page-Template/src/index.js"],"sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom/client'; // ใช้ react-dom/client\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'; // นำเข้า Routes และ Route\n// import servicesDetail from './components/servicesDetail.jsx';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'; // รวม Popper.js\n\n// ใช้ createRoot แทน ReactDOM.render\nconst root = ReactDOM.createRoot(document.getElementById('root')); // สร้าง root ใหม่\nroot.render(\n  <React.StrictMode>\n  <BrowserRouter> {/* Wrap ด้วย BrowserRouter */}\n  <Routes>\n        {/* Default path renders the App component */}\n        <Route path=\"/\" element={<App />} />\n        \n        {/* Additional paths */}\n        {/* <Route path=\"/page1\" element={<servicesDetail />} /> */}\n        {/* <Route path=\"/page2\" element={<Page2 />} /> */}\n      </Routes>\n  </BrowserRouter>\n</React.StrictMode>\n);\n\nserviceWorker.unregister();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,KAAKC,aAAa,MAAM,iBAAiB;AAChD,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB,CAAC,CAAC;AACjE;;AAEA,OAAO,sCAAsC;AAC7C,OAAO,2CAA2C,CAAC,CAAC;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACnEJ,IAAI,CAACK,MAAM,cACTN,OAAA,CAACP,KAAK,CAACc,UAAU;EAAAC,QAAA,eACjBR,OAAA,CAACJ,aAAa;IAAAY,QAAA,GAAC,GAAC,eAChBR,OAAA,CAACH,MAAM;MAAAW,QAAA,eAEDR,OAAA,CAACF,KAAK;QAACW,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEV,OAAA,CAACN,GAAG;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAK9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CAClB,CAAC;AAEDnB,aAAa,CAACoB,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}